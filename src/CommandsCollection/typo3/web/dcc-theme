#!/bin/bash

############################
# DDEV Commands Collection #
############################

## https://github.com/jackd248/ddev-commands-collection
## v<version/>
## dcc-autogenerated
. "$(dirname "$0")/../dcc-config.sh"
. "$(dirname "$0")/../scripts/dcc-colors.sh"
printf "${reset}${cyan}[DCC]${reset} DDEV Commands Collection\n"

## Description: Run theme commands and build frontend assets for the application {ddev theme, ddev theme build, ddev theme watch}
## Usage: theme
## Example: "ddev theme" or "ddev theme install"

cd ${composerPathApp}
echo -e "${blue}[INFO]${reset} Run command in ${composerPathApp}"

if [ $# -eq 0 ]
then
  echo
  echo -e "${magenta}[CONFIG]${reset}"
  read -p $"Update npm dependencies? (y|N)" UPDATE_NPM

  if [[ $UPDATE_NPM =~ ^[Yy]$ ]]
  then
    echo -e "${blue}[INFO]${reset} Update npm dependencies"
    printf "${reset}${cyan}[DCC]${reset}${reset}<web> ${black}npm ci${reset}\n"
    npm ci
  fi

  # build complete frontend

  printf "${reset}${cyan}[DCC]${reset}${reset}<web> ${black}npm run build${reset}\n"
  npm run build

  echo
  echo -e "${green}Done.${reset}"
else
  # npm development
  if [[ $@ == "build" || $@ == "development" || $@ == "symfony" ]]
  then

    printf "${reset}${cyan}[DCC]${reset}${reset}<web> ${black}npm run build${reset}\n"
    npm run build

  # npm watch
  elif [[ $@ == "watch" ]]
  then

    printf "${reset}${cyan}[DCC]${reset}${reset}<web> ${black}npm run watch${reset}\n"
    npm run watch

  # every npm
  else

    printf "${reset}${cyan}[DCC]${reset}${reset}<web> ${black}npm $@${reset}\n"
    npm $@
  fi
fi
